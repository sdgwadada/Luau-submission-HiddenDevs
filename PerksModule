local perks = {
	["Speedster"] = {
		Name = "Speedster",
		PerkType = "Passive",
		Trigger = "Always",
		Chance = 450,
		Levels = {
			[1] = {
				Cost = {
					Amount = 1200,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "WalkSpeed", Multiplier = 1.3},
				},
				Description = "+30% move speed."
			},
			[2] = {
				Cost = {
					Amount = 1,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "WalkSpeed", Multiplier = 1.4},
				},
				Description = "+40% move speed."
			},
			[3] = {
				Cost = {
					Amount = 1,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "WalkSpeed", Multiplier = 1.5},
				},
				Description = "+50% move speed."
			},
		},
		MaxLevel = 3,
		ForSale = true
	},
	["DamageJester"] = {
		Name = "DamageJester",
		PerkType = "Passive",
		Trigger = "Always",
		Chance = 700,
		Levels = {
			[1] = {
				Cost = {
					Amount = 2000,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "Damage", Multiplier = 1.05},
				},
				Description = "+5% damage."
			},
			[2] = {
				Cost = {
					Amount = 1,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "Damage", Multiplier = 1.08},
				},
				Description = "+8% damage."
			},
			[3] = {
				Cost = {
					Amount = 1,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "Damage", Multiplier = 1.1},
				},
				Description = "+10% damage."
			},
		},
		MaxLevel = 3,
		ForSale = true
	},
	["Cooldown"] = {
		Name = "Cooldown",
		PerkType = "Passive",
		Trigger = "Always",
		Chance = 285,
		Levels = {
			[1] = {
				Cost = {
					Amount = 2300,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "Cooldown", Multiplier = 0.95},
				},
				Description = "-5% cooldown."
			},
			[2] = {
				Cost = {
					Amount = 1,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "Cooldown", Multiplier = 0.93},
				},
				Description = "-7% cooldown."
			},
			[3] = {
				Cost = {
					Amount = 1,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "Cooldown", Multiplier = 0.9},
				},
				Description = "-10% cooldown."
			},
		},
		MaxLevel = 3,
		ForSale = true
	},
	["Healthier"] = {
		Name = "Healthier",
		PerkType = "Passive",
		Trigger = "Always",
		Chance = 200,
		Levels = {
			[1] = {
				Cost = {
					Amount = 3600,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "Health", Multiplier = 1.05},
				},
				Description = "+5% health."
			},
			[2] = {
				Cost = {
					Amount = 1,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "Health", Multiplier = 1.12},
				},
				Description = "+12% health."
			},
			[3] = {
				Cost = {
					Amount = 1,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "Health", Multiplier = 1.2},
				},
				Description = "+20% health."
			},
		},
		MaxLevel = 3,
		ForSale = true
	},
	["Berseker"] = {
		Name = "Berseker",
		PerkType = "Passive",
		Trigger = "Always",
		Chance = 70,
		Levels = {
			[1] = {
				Cost = {
					Amount = 10000,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "Damage", Multiplier = 1.2},
				},
				Description = "+20% damage."
			},
			[2] = {
				Cost = {
					Amount = 1,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "Damage", Multiplier = 1.3},
				},
				Description = "+30% damage."
			},
			[3] = {
				Cost = {
					Amount = 1,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "Damage", Multiplier = 1.4},
				},
				Description = "+40% damage."
			},
		},
		MaxLevel = 3,
		ForSale = true
	},
	["Bloodlusted"] = {
		Name = "Bloodlusted",
		PerkType = "Action",
		Trigger = "OnKill",
		Duration = nil,
		Stackable = true,
		MaxStacks = 10,
		Chance = 30,
		Levels = {
			[1] = {
				Cost = {
					Amount = 3000,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "Damage", Multiplier = 1.01},
				},
				Description = "+1% damage for up to 10% for every mutant killed."
			},
			[2] = {
				Cost = {
					Amount = 1,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "Damage", Multiplier = 1.025},
				},
				Description = "+2.5% damage for up to 25% for every mutant killed."
			},
			[3] = {
				Cost = {
					Amount = 1,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "Damage", Multiplier = 1.04},
				},
				Description = "+4% damage for up to 40% for every mutant killed."
			},
		},
		MaxLevel = 3,
		ForSale = true
	},
	["XPBoost"] = {
		Name = "XPBoost",
		PerkType = "Passive",
		Trigger = "Always",
		Chance = 5,
		Levels = {
			[1] = {
				Cost = {
					Amount = 5000,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "XP", Multiplier = 1.05},
				},
				Description = "+5% EXP boost."
			},
			[2] = {
				Cost = {
					Amount = 1,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "XP", Multiplier = 1.1},
				},
				Description = "+10% EXP boost."
			},
			[3] = {
				Cost = {
					Amount = 1,
					Currency = "MutantTokens"
				},
				Effects = {
					{Stat = "XP", Multiplier = 1.25},
				},
				Description = "+25% EXP boost."
			},
		},
		MaxLevel = 3,
		ForSale = true
	},

}
local playerSettings = {}

local function getValue(player, name, default)
	local v = player:FindFirstChild(name)
	return v and v.Value or default
end

function perks.GetPerkLevel(perkName, data)
	if not data then
		warn("No data provided to GetPerkLevel")
		return 1
	end

	if not data.EquippedPerks then
		warn("No EquippedPerks in data")
		return 1
	end

	local perkData = data.EquippedPerks[perkName]
	if not perkData then
		warn("Perk '" .. perkName .. "' is not equipped")
		return 1
	end

	return perkData.Level or 1
end


function perks.GetPerkEffects(player, perkName, data)
	local perk = perks[perkName]
	if not perk then return {} end

	local level = perks.GetPerkLevel(perkName, data)
	if perk.Levels and perk.Levels[level] then
		return perk.Levels[level].Effects
	end
	return {}
end


function perks.ApplyEffects(player, effects)
	print("Applying", effects, "to :", player.Name)
	if not playerSettings[player.UserId] then
		playerSettings[player.UserId] = {
			Damage = getValue(player, "Damage", 150),
			Cooldown = getValue(player, "Cooldown", 2),
		}
	end
	local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
	print(humanoid)
	for _, effect in effects do
		if effect.Stat == "WalkSpeed" then
			if humanoid then
				print(humanoid.WalkSpeed)
				humanoid.WalkSpeed = humanoid.WalkSpeed * effect.Multiplier
				print(humanoid.WalkSpeed)
			end

		elseif effect.Stat == "Damage" then
			player:FindFirstChild("Damage").Value = player:FindFirstChild("Damage").Value * effect.Multiplier
			print(player:FindFirstChild("Damage").Value)
		
		elseif effect.Stat == "Cooldown" then
			player:FindFirstChild("Cooldown").Value = player:FindFirstChild("Cooldown").Value * effect.Multiplier
			
		elseif effect.Stat == "Health" then
			if humanoid then
				print(humanoid.MaxHealth, humanoid.Health)
				humanoid.MaxHealth = humanoid.MaxHealth * effect.Multiplier
				humanoid.Health = humanoid.Health * effect.Multiplier
				print(humanoid.MaxHealth, humanoid.Health)
			end
			
		elseif effect.Stat == "XP" then
			player:FindFirstChild("XPMultiplier").Value = player:FindFirstChild("XPMultiplier").Value * effect.Multiplier
			print(player:FindFirstChild("XPMultiplier").Value)
		end
	end
end


function perks.RemoveEffects(player, effects)
	local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
	for _, effect in effects do
		if effect.Stat == "WalkSpeed" then
			if humanoid then
				humanoid.WalkSpeed = humanoid.WalkSpeed / effect.Multiplier
				print(humanoid.WalkSpeed)
			end

		elseif effect.Stat == "Damage" then
			player:FindFirstChild("Damage").Value = playerSettings[player.UserId].Damage
			print(player:FindFirstChild("Damage").Value)
			
		elseif effect.Stat == "Cooldown" then
			player:FindFirstChild("Cooldown").Value = playerSettings[player.UserId].Cooldown
			
		elseif effect.Stat == "Health" then
			if humanoid then
				humanoid.MaxHealth = humanoid.MaxHealth / effect.Multiplier
				humanoid.Health = humanoid.Health / effect.Multiplier)
			end
			
		elseif effect.Stat == "XP" then
			player:FindFirstChild("XPMultiplier").Value = player:FindFirstChild("XPMultiplier").Value / effect.Multiplier
			print(player:FindFirstChild("XPMultiplier").Value)
		end
	end
end


function perks.UsePerk(player, perkName, data)
	local perk = perks[perkName]
	if not perk then return end

	local effects = perks.GetPerkEffects(player, perkName, data)
	perks.ApplyEffects(player, effects)

	if perk.Duration then
		task.delay(perk.Duration, function()
			perks.RemoveEffects(player, effects)
		end)
	end
end



return perks
